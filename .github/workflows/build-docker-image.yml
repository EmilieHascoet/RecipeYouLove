name: 🐳 Build Docker Image

on:
  workflow_call:
    inputs:
      image-tag:
        description: "Tag de l'image Docker"
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    name:  Build ${{ matrix.microservice }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        microservice:
          - microservice1-mysql
          - microservice2-mysql
          - microservice3-mongodb
    permissions:
      contents: read
      packages: write
    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.microservice }}-jar
          path: microservices/${{ matrix.microservice }}/target/

      - name:  Vérifier JAR téléchargé
        working-directory: microservices/${{ matrix.microservice }}
        run: |
          ls -lh target/
          if [ ! -f target/*.jar ]; then
            echo " JAR non trouvé!"
            exit 1
          fi
          echo " JAR trouvé"

      - name:  Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name:  Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.microservice }}
          tags: |
            type=raw,value=${{ inputs.image-tag }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=ref,event=pr

      - name:  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name:  Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: microservices/${{ matrix.microservice }}
          file: microservices/${{ matrix.microservice }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            JAR_FILE=target/*.jar
            JAVA_VERSION=21

      - name:  Image Summary
        run: |
          echo "###  Docker Image Built - ${{ matrix.microservice }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name:  Export image digest
        run: |
          echo "IMAGE_DIGEST=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.microservice }}:${{ inputs.image-tag }}" >> $GITHUB_ENV