name: 🐳 Build Docker Image

on:
  workflow_call:
    inputs:
      image-tag:
        description: "Tag de l'image Docker"
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: application-jar
          path: target/

      - name: 🔍 Vérifier JAR téléchargé
        run: |
          ls -lh target/
          if [ ! -f target/*.jar ]; then
            echo "❌ JAR non trouvé!"
            exit 1
          fi
          echo "✅ JAR trouvé: $(ls target/*.jar)"

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏷️ Prepare image tags
        id: tags
        run: |
          IMAGE_TAG="${{ inputs.image-tag }}"
          FULL_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          
          echo "image-tag=${FULL_IMAGE}" >> $GITHUB_OUTPUT
          echo "short-tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          
          echo "🏷️ Image complète: ${FULL_IMAGE}"

      - name: 🐳 Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.image-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            JAR_FILE=target/*.jar
            JAVA_VERSION=21

      - name: 🔍 Vérifier que l'image a été poussée
        run: |
          echo "🔍 Vérification de l'image dans le registry..."
          IMAGE="${{ steps.tags.outputs.image-tag }}"
          
          # Attendre quelques secondes pour que l'image soit disponible
          sleep 5
          
          if docker manifest inspect $IMAGE > /dev/null 2>&1; then
            echo "✅ Image confirmée dans le registry: $IMAGE"
          else
            echo "⚠️ Image non visible immédiatement (peut prendre quelques secondes)"
          fi

      - name: 📊 Image Summary
        run: |
          echo "### 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`${{ steps.tags.outputs.short-tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image complète:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.tags.outputs.image-tag }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
