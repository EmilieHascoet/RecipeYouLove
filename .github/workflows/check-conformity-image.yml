name: Check Conformity Image

on:
  workflow_call:
    inputs:
      image-tag:
        description: "Tag de l'image Docker √† scanner"
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  security-scan:
    name: üîç Scan ${{ matrix.microservice }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        microservice:
          - microservice1-mysql
          - microservice2-mysql
          - microservice3-mongodb
    permissions:
      contents: read
      security-events: write
      packages: read
    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name:  Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.microservice }}:${{ inputs.image-tag }}
          format: 'sarif'
          output: 'trivy-results-${{ matrix.microservice }}.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'  # Ne pas √©chouer le job

      - name:  Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.microservice }}.sarif'
          category: trivy-${{ matrix.microservice }}

      - name:  Run Trivy for detailed report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.microservice }}:${{ inputs.image-tag }}
          format: 'table'
          output: 'trivy-report-${{ matrix.microservice }}.txt'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name:  Parse Trivy results
        id: parse-trivy
        run: |
          REPORT_FILE="trivy-report-${{ matrix.microservice }}.txt"
          
          if [ -f "$REPORT_FILE" ]; then
            CRITICAL=$(grep -c "CRITICAL" "$REPORT_FILE" || echo "0")
            HIGH=$(grep -c "HIGH" "$REPORT_FILE" || echo "0")
            MEDIUM=$(grep -c "MEDIUM" "$REPORT_FILE" || echo "0")
            LOW=$(grep -c "LOW" "$REPORT_FILE" || echo "0")
          
            echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
            echo "high=$HIGH" >> $GITHUB_OUTPUT
            echo "medium=$MEDIUM" >> $GITHUB_OUTPUT
            echo "low=$LOW" >> $GITHUB_OUTPUT
          
            echo " Vuln√©rabilit√©s d√©tect√©es:"
            echo "  - CRITICAL: $CRITICAL"
            echo "  - HIGH: $HIGH"
            echo "  - MEDIUM: $MEDIUM"
            echo "  - LOW: $LOW"
          fi

      - name:  Security Summary
        run: |
          echo "### üîí Security Scan - ${{ matrix.microservice }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.microservice }}:${{ inputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| S√©v√©rit√© | Nombre |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| üî¥ CRITICAL | ${{ steps.parse-trivy.outputs.critical }} |" >> $GITHUB_STEP_SUMMARY
          echo "| üü† HIGH | ${{ steps.parse-trivy.outputs.high }} |" >> $GITHUB_STEP_SUMMARY
          echo "| üü° MEDIUM | ${{ steps.parse-trivy.outputs.medium }} |" >> $GITHUB_STEP_SUMMARY
          echo "| üü¢ LOW | ${{ steps.parse-trivy.outputs.low }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Afficher un extrait du rapport
          if [ -f "trivy-report-${{ matrix.microservice }}.txt" ]; then
            echo "<details>" >> $GITHUB_STEP_SUMMARY
            echo "<summary>üìã Rapport d√©taill√©</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            head -n 50 "trivy-report-${{ matrix.microservice }}.txt" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi

      - name:  Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report-${{ matrix.microservice }}
          path: trivy-report-${{ matrix.microservice }}.txt
          retention-days: 30

      - name:  Fail if critical vulnerabilities
        if: steps.parse-trivy.outputs.critical > 0
        run: |
          echo "‚ùå ERREUR: ${{ steps.parse-trivy.outputs.critical }} vuln√©rabilit√©s CRITICAL d√©tect√©es!"
          echo "üîó Consultez le rapport complet dans les artefacts"
          exit 1

      - name: ‚ö†Ô∏è Warning if high vulnerabilities
        if: steps.parse-trivy.outputs.high > 5
        run: |
          echo "‚ö†Ô∏è ATTENTION: ${{ steps.parse-trivy.outputs.high }} vuln√©rabilit√©s HIGH d√©tect√©es!"
          echo "üìù Consid√©rez de corriger ces vuln√©rabilit√©s avant la production"