name: üîí Check Conformity Image

on:
  workflow_call:
    inputs:
      image-tag:
        description: "Tag de l'image Docker √† scanner"
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  security-scan:
    name: üîç Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      packages: read
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üîç Run Trivy vulnerability scanner (SARIF)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image-tag }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'

      - name: üì§ Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy-scan

      - name: üîç Run Trivy for detailed report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image-tag }}
          format: 'table'
          output: 'trivy-report.txt'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: üìä Parse Trivy results
        id: parse-trivy
        run: |
          REPORT_FILE="trivy-report.txt"
          
          if [ -f "$REPORT_FILE" ]; then
            CRITICAL=$(grep -c "CRITICAL" "$REPORT_FILE" || echo "0")
            HIGH=$(grep -c "HIGH" "$REPORT_FILE" || echo "0")
            MEDIUM=$(grep -c "MEDIUM" "$REPORT_FILE" || echo "0")
            LOW=$(grep -c "LOW" "$REPORT_FILE" || echo "0")
          
            echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
            echo "high=$HIGH" >> $GITHUB_OUTPUT
            echo "medium=$MEDIUM" >> $GITHUB_OUTPUT
            echo "low=$LOW" >> $GITHUB_OUTPUT
            
            echo "üìä R√©sultats du scan de s√©curit√©:"
            echo "   üî¥ CRITICAL: $CRITICAL"
            echo "   üü† HIGH: $HIGH"
            echo "   üü° MEDIUM: $MEDIUM"
            echo "   üîµ LOW: $LOW"
          fi

      - name: üì§ Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt
          retention-days: 30

      - name: ‚ö†Ô∏è Check security threshold
        run: |
          CRITICAL=${{ steps.parse-trivy.outputs.critical }}
          HIGH=${{ steps.parse-trivy.outputs.high }}
          
          if [ "$CRITICAL" -gt 0 ]; then
            echo "‚ùå √âCHEC: $CRITICAL vuln√©rabilit√©s CRITIQUES d√©tect√©es"
            echo "::error::Des vuln√©rabilit√©s critiques ont √©t√© d√©tect√©es. Corrigez-les avant de d√©ployer."
            exit 1
          fi
          
          if [ "$HIGH" -gt 5 ]; then
            echo "‚ö†Ô∏è ATTENTION: $HIGH vuln√©rabilit√©s HIGH d√©tect√©es (seuil: 5)"
            echo "::warning::Trop de vuln√©rabilit√©s HIGH. Recommandation: corriger avant d√©ploiement."
          fi
          
          echo "‚úÖ Scan de s√©curit√© pass√© avec succ√®s"
