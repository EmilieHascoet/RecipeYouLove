apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice.fullname" . }}
  labels:
    {{- include "microservice.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "microservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: {{ .Values.vault.role | quote }}
        vault.hashicorp.com/agent-inject-secret-db: {{ .Values.vault.path }}/db
        vault.hashicorp.com/agent-inject-template-db: |
          {{`{{- with secret "`}}{{ .Values.vault.path }}/db{{`" -}}
          export DB_URL="{{ .Data.data.DB_URL }}"
          export DB_USERNAME="{{ .Data.data.DB_USERNAME }}"
          export DB_PASSWORD="{{ .Data.data.DB_PASSWORD }}"
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-mongodb: {{ .Values.vault.path }}/mongodb
        vault.hashicorp.com/agent-inject-template-mongodb: |
          {{`{{- with secret "`}}{{ .Values.vault.path }}/mongodb{{`" -}}
          export MONGODB_URI="{{ .Data.data.MONGODB_URI }}"
          export MONGODB_DATABASE="{{ .Data.data.MONGODB_DATABASE }}"
          {{- end }}`}}
        {{- end }}
      labels:
        {{- include "microservice.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "microservice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        {{- if .Values.healthCheck.enabled }}
        livenessProbe:
          {{- toYaml .Values.healthCheck.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.healthCheck.readinessProbe | nindent 12 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "microservice.fullname" . }}-config
        {{- if not .Values.vault.enabled }}
        - secretRef:
            name: {{ .Values.env.secretName }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.vault.enabled }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            source /vault/secrets/db
            source /vault/secrets/mongodb
            exec java $JAVA_OPTS -jar /app.jar
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

